--- #YAML:1.0
# This is a YAML formatted file with '#'-style comments.  This file
# *must* be parseable by the YAML::Tiny perl module.  So don't use
# the inline list or map forms and don't try to use any really fancy
# features like tagging or anchors.
#
# It is used to generate parameter-handling code for MPICH2.
# See the maint/genparams script for more information.
#
# The only tricky bit is that long reflowed text (such as a description)
# should use ">-" to both fold newlines and remove the trailing newline.
#
# Listing "FOO" as a parameter name will cause two environment variables
# to be examined by default: MPIR_PARAM_FOO and MPICH_FOO, with the
# MPIR_PARAM value having priority.
categories:
    - name        : collective
      description : parameters that control collective communication behavior
    - name        : pt2pt
      description : parameters that control point-to-point communication behavior
    - name        : intranode
      description : intranode communication parameters
    - name        : developer
      description : useful for developers working on MPICH2 itself
    - name        : error_handling
      description : parameters that control error handling behavior (stack traces, aborts, etc)
    - name        : debugger
      description : parameters relevant to the "MPIR" debugger interface
    - name        : checkpointing
      description : parameters relevant to checkpointing
    - name        : threads
      description : multi-threading parameters
    - name        : nemesis
      description : "parameters that control behavior of the ch3:nemesis channel"

parameters:
    ##############################################################
    # collective parameters
    - category    : collective
      name        : ALLTOALL_SHORT_MSG_SIZE
      type        : int
      default     : 256
      description : >-
        the short message algorithm will be used if the per-destination
        message size (sendcount*size(sendtype)) is <= this value

    - category    : collective
      name        : ALLTOALL_MEDIUM_MSG_SIZE
      type        : int
      default     : 32768
      description : >-
        the medium message algorithm will be used if the per-destination
        message size (sendcount*size(sendtype)) is <= this value and
        larger than ALLTOALL_SHORT_MSG_SIZE

    - category    : collective
      name        : ALLTOALL_THROTTLE
      type        : int
      default     : 4
      description : >-
        max no. of irecvs/isends posted at a time in some alltoall
        algorithms. Setting it to 0 causes all irecvs/isends to be
        posted at once.

    - category    : collective
      name        : REDSCAT_COMMUTATIVE_LONG_MSG_SIZE
      type        : int
      default     : 524288
      description : >-
        the long message algorithm will be used if the operation is commutative
        and the send buffer size is >= this value (in bytes)

    - category    : collective
      name        : BCAST_MIN_PROCS
      type        : int
      default     : 8
      description : >-
        the minimum number of processes in a communicator to use a non-binomial
        broadcast algorithm

    - category    : collective
      name        : BCAST_SHORT_MSG_SIZE
      type        : int
      default     : 12288
      description : >-
        the short message algorithm will be used if the send buffer size is <
        this value (in bytes)

    - category    : collective
      name        : BCAST_LONG_MSG_SIZE
      type        : int
      default     : 524288
      description : >-
        the long message algorithm will be used if the send buffer size is >=
        this value (in bytes)

    - category    : collective
      name        : ALLGATHER_SHORT_MSG_SIZE
      type        : int
      default     : 81920
      description : >-
        For MPI_Allgather and MPI_Allgatherv, the short message algorithm will
        be used if the send buffer size is < this value (in bytes).

    - category    : collective
      name        : ALLGATHER_LONG_MSG_SIZE
      type        : int
      default     : 524288
      description : >-
        For MPI_Allgather and MPI_Allgatherv, the long message algorithm will be
        used if the send buffer size is >= this value (in bytes)

    - category    : collective
      name        : REDUCE_SHORT_MSG_SIZE
      type        : int
      default     : 2048
      description : >-
        the short message algorithm will be used if the send buffer size is <=
        this value (in bytes)

    - category    : collective
      name        : ALLREDUCE_SHORT_MSG_SIZE
      type        : int
      default     : 2048
      description : >-
        the short message algorithm will be used if the send buffer size is <=
        this value (in bytes)

    - category    : collective
      name        : GATHER_VSMALL_MSG_SIZE
      type        : int
      default     : 1024
      description : >-
        use a temporary buffer for intracommunicator MPI_Gather if the send
        buffer size is < this value (in bytes)

    - category    : collective
      name        : GATHER_INTER_SHORT_MSG_SIZE
      type        : int
      default     : 2048
      description : >-
        use the short message algorithm for intercommunicator MPI_Gather if the
        send buffer size is < this value (in bytes)

    - category    : collective
      name        : GATHERV_INTER_SSEND_MIN_PROCS
      # backwards compatibility
      abs-alt-env :
                    - MPICH2_GATHERV_MIN_PROCS
      type        : int
      default     : 32
      description : >-
        Use Ssend (synchronous send) for intercommunicator MPI_Gatherv if the
        "group B" size is >= this value.  Specifying "-1" always avoids using
        Ssend.  For backwards compatibility, specifying "0" uses the default
        value.

    - category    : collective
      name        : SCATTER_INTER_SHORT_MSG_SIZE
      type        : int
      default     : 2048
      description : >-
        use the short message algorithm for intercommunicator MPI_Scatter if the
        send buffer size is < this value (in bytes)

    - category    : collective
      name        : ALLGATHERV_PIPELINE_MSG_SIZE
      type        : int
      default     : 32768
      description : >-
        The smallest message size that will be used for the pipelined, large-message,
        ring algorithm in the MPI_Allgatherv implementation.

    ##############################################################
    # intranode communication parameters
    - category    : intranode
      name        : NOLOCAL
      alt-env     :
                    - NO_LOCAL
      type        : boolean
      default     : false
      description : >-
        If true, force all processes to operate as though all processes
        are located on another node.  For example, this disables shared
        memory communication hierarchical collectives.

    - category    : developer
      name        : MEMDUMP
      type        : boolean
      default     : true
      description : >-
        If true, list any memory that was allocated by MPICH2 and that
        remains allocated when MPI_Finalize completes.

    - category    : debugger
      name        : PROCTABLE_SIZE
      type        : int
      default     : 64
      description : >-
        Size of the "MPIR" debugger interface proctable (process table).

    - category    : debugger
      name        : PROCTABLE_PRINT
      type        : boolean
      default     : true
      description : >-
        If true, dump the proctable entries at MPIR_WaitForDebugger-time.
        (currently compile-time disabled by "#if 0")

    - category    : error_handling
      name        : PRINT_ERROR_STACK
      type        : boolean
      default     : true
      description : >-
        If true, print an error stack trace at error handling time.

    - category    : error_handling
      name        : CHOP_ERROR_STACK
      type        : int
      default     : 0
      description : >-
        If >0, truncate error stack output lines this many characters
        wide.  If 0, do not truncate, and if <0 use a sensible default.

    - category    : intranode
      name        : NEM_LMT_DMA_THRESHOLD
      type        : int
      # 2048*1024 == 2MiB
      default     : 2097152
      description : >-
        Messages larger than this size will use the "dma" (knem)
        intranode LMT implementation, if it is enabled and available.

    - category    : nemesis
      name        : NEMESIS_NETMOD
      type        : string
      default     : ""
      description : >-
        If non-empty, this parameter specifies which network module
        should be used for communication.
  
  ##############################################################
    # debugging parameters
    - category    : debugger
      name        : DEBUG_HOLD
      type        : boolean
      default     : false
      description : >-
        If true, causes processes to wait in MPI_Init and
        MPI_Initthread for a debugger to be attached.  Once the
        debugger has attached, the variable 'hold' should be set to 0
        in order to allow the process to continue (e.g., in gdb, "set
        hold=0").

  ##############################################################
    # checkpointing parameters
    - category    : checkpointing
      name        : ENABLE_CKPOINT
      type        : boolean
      default     : false
      description : >-
        If true, enables checkpointing support and returns an error if
        checkpointing library cannot be initialized.

...

# Local Variables:
# mode: conf-colon
# indent-tabs-mode: nil
# End:
