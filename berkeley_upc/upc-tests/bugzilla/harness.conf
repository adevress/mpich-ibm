# Test harness configuration file

# Initial config file assumes all compilations are positive
# and that we should compile for both static and dynamic 
# threads, but not to run the resulting code.

BEGIN_DEFAULT_CONFIG
Flags:                               # no special compilation flags
Files:          $TESTNAME$.upc       # filename derived from testname
DynamicThreads: $DEFAULT$            # compile for dynamic threads
StaticThreads:  $DEFAULT$            # compile for static threads
CompileResult:  pass                 # expect compilation to succeed
TimeLimit:      0                    # dont run the test
PassExpr:       0                    # No pass expression
FailExpr:       0                    # No fail expression
ExitCode:       ignore               # ignore exit code
BuildCmd:       upcc                 # use upcc to build code
AppArgs:                             # no args to run app
END_DEFAULT_CONFIG

# ------------------------------------------------------------

TestName: 	barriertest
PassExpr:	^Barrier test SUCCESS
FailExpr:	^Barrier test FAILED
TimeLimit:      $DEFAULT$

TestName: 	testenv
AppArgs:	UPC is "Unified Parallel C"
AppEnv:		UPC_DUMMY="UPC dummy value"
TimeLimit:      $DEFAULT$

TestName: 	locktest
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:      $DEFAULT$

TestName: 	staticinit
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:      $DEFAULT$

TestName: 	clocktest
RequireFeature: upc_tick
PassExpr:	^done.
FailExpr:	ERROR
DynamicThreads: 1  # avoid CPU overload issues
StaticThreads:  0
TimeLimit:      $DEFAULT$

TestName:       checktypes
PassExpr: ^done.
TimeLimit:      $DEFAULT$

TestName:       no-main-return
ExitCode:       0            # we're testing for a zero exit here 
PassExpr: ^done.
TimeLimit:      $DEFAULT$

TestName: 	exittest
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:      $DEFAULT$

TestName:       checkforall
PassExpr: ^done.
FailExpr: ERROR
TimeLimit:      $DEFAULT$
#KnownFailure: bug766 (bad codegen on bugzilla/checkforall)

TestName:       fpe
PassExpr: ^done.
TimeLimit:      $DEFAULT$

TestName:       intarg
PassExpr: ^Success
FailExpr: ^Fail
TimeLimit:      $DEFAULT$
#KnownFailure:   bug383 (problems with argument to function with no formal argument prototype)

TestName:	bzero
PassExpr: ^done.
FailExpr: ERROR
TimeLimit:	$DEFAULT$

TestName:	barrier_coll_race
PassExpr:	^done.
TimeLimit:	$DEFAULT$
RequireFeature: upc_collective

TestName:	tricky_sizeof1
PassExpr:	^10
TimeLimit:	$DEFAULT$
# performs upc_blocksize(incomplete type) 
# Berkeley UPC currently allows this, although perhaps it should not
RequireFeature: berkeleyupc

TestName:	tricky_sizeof2
CompileResult:	fail	

TestName:	tricky_sizeof3
CompileResult:	fail	

TestName:	tricky_sizeof4
CompileResult:	fail	
#KnownFailure: bug842 (Translator should reject *sizeof(void))

TestName:	tricky_sizeof5
PassExpr:	^done.
TimeLimit:	$DEFAULT$

TestName:	tricky_sizeof7
CompileResult:	fail	
#KnownFailure: bug842 (Translator should reject *sizeof(void))

TestName:	tricky_sizeof6-static
Files:          tricky_sizeof6.upc
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
DynamicThreads: 0
StaticThreads:  $DEFAULT$            # compile for static threads

TestName:	tricky_sizeof6-dynamic
Files:          tricky_sizeof6.upc
CompileResult:	fail	
DynamicThreads: $DEFAULT$            # compile for dynamic threads
StaticThreads:  0

# test our tracing facilities are functional
TestName:	testtrace
Flags: 		-g -lines
RunCmdArgs: 	-tracefile=upctrace-$TESTNAME$.dump.%
DynamicThreads: $DEFAULT$ 
StaticThreads: 	$DEFAULT$ 
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
RequireFeature: upcr,gasnet,trace,upc_trace_printf,upc_trace_mask

TestName:	upctrace-testtrace
MakeFlags:	-f upctrace-testtrace.mak CC='$HOST_CC$' CFLAGS='$HOST_CFLAGS$' LDFLAGS='$HOST_LDFLAGS$' LIBS='$HOST_LIBS$'
DynamicThreads: $DEFAULT$  # currently static/dynamic tracefiles overwrite each other
StaticThreads: 	0
BuildCmd:       make,notrans
AppArgs:	$TOP_BUILDDIR$/upc_trace -f -t $TESTNAME$.dump.%
RunCmd:		%P %A
PassExpr:	^done.
# fail if any table empty, or a filename includes a upcr or gasnet library filename
FailExpr:	(ERROR|^NONE|/upcr/|/gasnet/) 
TimeLimit:	$DEFAULT$
SaveOutput:	1
RequireFeature: upcr,gasnet,trace,upc_trace_printf,upc_trace_mask

TestName:       buganon1
BuildCmd:       nolink,upcc
#KnownFailure: compile-all ;; bug1008 (assigning to an element of shared a array of structs)

TestName:       buganon2
BuildCmd:       nolink,upcc

TestName:       bug3
BuildCmd:       nolink,upcc

TestName:       bug6
CompileResult:	fail	# test MAXBSIZE + 1

TestName:       bug7

TestName:       bug7b

TestName:       bug31

TestName:       bug32

TestName:       bug33

TestName:       bug39
#KnownFailure:   bug349 ( bad codegen for spointer -> int cast, on struct ptrs only )
#KnownFailure: bug39 (Translator generates code that directly assigns a pointer to an int variable without a cast)
#KnownFailure: bug827 (codegen regression on 64-bit regarding pointer-int casts)
PassExpr: ^1
FailExpr: ^Error
StaticThreads: 2
DynamicThreads: 2
TimeLimit:      $DEFAULT$

TestName:       bug40
PassExpr: ^done
FailExpr: ERROR
TimeLimit:      $DEFAULT$
KnownFailure: compile-all ;; bug409 (types in translator-generated function prototypes mismatch reincluded headers)

TestName:       bug41
BuildCmd:       nolink,upcc

TestName:       bug41x
PassExpr: ^done
FailExpr: ERROR
TimeLimit:      $DEFAULT$
#KnownFailure:   bug114 (Seaborg compilation: bug41b.h and bug41b.h not included in translated code)
#KnownFailure: bug639 (translator emitting mid-block declarations for shared data init)

TestName:       bug46

TestName:       bug53
PassExpr: Passed
FailExpr: Error
TimeLimit:      $DEFAULT$

TestName:       bug57

TestName:       bug58
FailExpr: ^Error
TimeLimit:      $DEFAULT$
#KnownFailure: bug826 (codegen regression on bug58)

TestName:       bug61

TestName:       bug63

TestName:       bug87
PassExpr: ^done.
TimeLimit:      $DEFAULT$
#KnownFailure: compile-warning ;  ; bug1325 (__deprecated__ attribute directive ignored warning)
KnownFailure: compile-failure ; cc_intel ; bug1006 (translator crash on wchar.h with Intel C)
KnownFailure: compile-warning ; cc_pgi ; bogus PGI warnings about wctype.h

TestName:       bug88
PassExpr: ^done.
FailExpr: ERROR
StaticThreads: 2
DynamicThreads: 2
TimeLimit:      $DEFAULT$

TestName:       bug89
PassExpr: ^done
FailExpr: ERROR
TimeLimit:      $DEFAULT$
#KnownFailure: bug89 (translator incorrectly resets phase in some cases)

TestName:	bug90a
StaticThreads:	2
DynamicThreads:	0
PassExpr:	^1: done.
FailExpr:	ERROR
TimeLimit:      $DEFAULT$

TestName:	bug90b
StaticThreads:	2
DynamicThreads:	0
PassExpr:	^1: done.
FailExpr:	ERROR
TimeLimit:      $DEFAULT$

TestName:       bug91
#KnownFailure:   bug339 (Translator deletes empty main)
#KnownFailure: compile-all ; ; bug1319 (Translator should ignore asm stmts in c-mode headers)

TestName:       bug105

TestName:       bug109

TestName:       bug115

TestName:       bug116

TestName:       bug116b
PassExpr: ^done
FailExpr: ERROR
TimeLimit:      $DEFAULT$
#KnownFailure:   bug116 (Translator truncates string literals with embedded nulls)

TestName:       bug133
PassExpr: 4 8 5\s*1.400000 2.700000 7\s*4\s*10\s*1.400000\s*2.700000\s*2\s*done.
StaticThreads: 1
DynamicThreads:	1
TimeLimit:      $DEFAULT$

TestName:       bug137

TestName:       bug137b
#KnownFailure:   compile-all ;; bug137 (varargs and alloca builtins are broken)

TestName:       bug137c
StaticThreads: 1
DynamicThreads:	1
PassExpr: SUCCESS
FailExpr: FAILED
TimeLimit:      $DEFAULT$

TestName:       bug137d
StaticThreads: 1
DynamicThreads:	1
PassExpr: SUCCESS
FailExpr: FAIL
TimeLimit:      $DEFAULT$

TestName:       bug137e
StaticThreads: 1
DynamicThreads:	1
PassExpr: SUCCESS
FailExpr: FAIL
TimeLimit:      $DEFAULT$

TestName:       bug138
PassExpr: ^done
TimeLimit:      $DEFAULT$

TestName:       bug139
PassExpr: ^done
FailExpr: ERROR
TimeLimit:      $DEFAULT$

TestName:       bug140 # fails under gcc as well

TestName:       bug142
PassExpr: ^done
TimeLimit:      $DEFAULT$

TestName:       bug145
PassExpr: ^done.
FailExpr: ERROR
TimeLimit:      $DEFAULT$

TestName:       bug147
KnownFailure:   bug147 (sizeof(long double) is incorrect)

TestName:       bug148

TestName:       bug149

TestName:       bug154

TestName:       bug156
PassExpr: ^0\s*0\s*done
StaticThreads: 1
DynamicThreads:	1
TimeLimit:      $DEFAULT$

TestName:       bug159
PassExpr: ^done
FailExpr: ERROR
TimeLimit:      $DEFAULT$

TestName:       bug164

TestName:       bug170
#KnownFailure: bug456 (Can't parse Linux sys/stat.h)

TestName:       bug170b
#KnownFailure: bug456 (Can't parse Linux sys/stat.h)

TestName:       bug171

TestName:       bug174
PassExpr: ^1
TimeLimit:      $DEFAULT$

TestName:       bug175
StaticThreads:	2	
DynamicThreads:	0
PassExpr: ^done.
FailExpr: ERROR
TimeLimit:      $DEFAULT$

TestName:       bug175a
StaticThreads:	2	
DynamicThreads:	2	
PassExpr: ^done.
FailExpr: ERROR
TimeLimit:      $DEFAULT$

TestName:       bug176
RequireFeature: berkeleyupc # bupc_assert_type
FailExpr: ERROR
PassExpr: ^done.
TimeLimit:      $DEFAULT$

TestName:       bug176a
RequireFeature: berkeleyupc # bupc_assert_type
CompileResult:  pass
PassExpr:	SUCCESS
#KnownFailure:	bug176 (upc_assert_type should be bupc_assert_type)

TestName:       bug176b
RequireFeature: berkeleyupc # bupc_assert_type
CompileResult:  fail
#KnownFailure:	bug176 (upc_assert_type should be bupc_assert_type)

# We expect a compile-time warning and runtime success.
# We have no mechanism for expected warnings at this time, so we use make to filter.
TestName:	bug176c
RequireFeature: berkeleyupc # bupc_assert_type
PassExpr:	^done.
FailExpr:	ERROR
MakeFlags:	-f bug176c.mak
BuildCmd:	make,notrans
DynamicThreads:	0
StaticThreads:	1
TimeLimit:	$DEFAULT$
KnownFailure:	run-match ;; bug 176 (Fix bupc_assert_type())

TestName:       bug179

TestName:       bug192

TestName:       bug201

TestName:       bug206
DynamicThreads:	0	# Can't be compiled with dynamic threads

TestName:       bug207
PassExpr:	^done.
StaticThreads: 1
DynamicThreads:	0	# static threads only
TimeLimit:      $DEFAULT$

TestName:       bug208
KnownFailure: compile-all ;; bug409 (types in translator-generated function prototypes mismatch reincluded headers)

TestName:       bug209

TestName:       bug214

TestName:       bug223a

TestName:       bug223

TestName:       bug225
BuildCmd:       nolink,upcc

TestName:       bug232
#KnownFailure:   bug114 (Seaborg Compilation: bug232.h not included in translated code)

TestName:       bug233

TestName:       bug234
#KnownFailure:   bug387 (Bad codegen on bug234 w struct ptrs on 64-bit)
PassExpr:       ^FOO\sGOOD
FailExpr:       ^FOO\sBAD
TimeLimit:      $DEFAULT$
KnownFailure: compile-failure ; os_darwin && cc_gnu ; offsetof broken on OSX 10.4

TestName:       bug235

TestName:       bug236
PassExpr:       ^SUCCESS

TestName:       bug237
#KnownFailure: bug237 (translator incorrectly compiles code for structure containing structure)

TestName:       bug237b
PassExpr:       ^SUCCESS
FailExpr:       FAILURE
TimeLimit:      $DEFAULT$
#KnownFailure: compile-warning ; cc_intel ; bug271 (ecc bounds check warnings for generated addr arith.)

TestName:       bug237c
PassExpr:       ^done.
TimeLimit:      $DEFAULT$
#KnownFailure: bug523 (duplicate struct def output)
#KnownFailure: bug237 (missing braces in nested initializers)

TestName:       bug238
BuildCmd:       nolink,upcc

TestName:	bug238b
BuildCmd:	nolink,upcc

TestName:       bug242

TestName:       bug243
#KnownFailure:	bug672 (Bad code gen for bug669.upc and bug243.upc)

TestName:       bug244
CompileResult:	fail	# a typo in test case
#KnownFailure:	bug244 (use of incomplete types lead to bad codegen, poor errors or translator crash)

TestName:       bug244b
CompileResult:	fail	# use of incomplete type
#KnownFailure:	bug244 (use of incomplete types lead to bad codegen, poor errors or translator crash)

TestName:       bug244c
CompileResult:	fail	# use of incomplete type upc_lock_t
#KnownFailure:	bug244 (use of incomplete types lead to bad codegen, poor errors or translator crash)

TestName:       bug246
BuildCmd:       nolink,upcc

TestName:       bug247
StaticThreads: 256
DynamicThreads:	0	# static threads only
TimeLimit:      $DEFAULT$

TestName:       bug271
PassExpr:       ^Success:
FailExpr:       ^Failure:
TimeLimit:      $DEFAULT$
#KnownFailure: compile-warning ; cc_intel ; bug271 (ecc bounds check warnings for generated addr arith.)

TestName:       bug275

TestName:       bug275a

TestName:       bug276
PassExpr: ^done
FailExpr: ERROR
TimeLimit:      $DEFAULT$

TestName:       bug279
#KnownFailure:   bug387 (Bad codegen on bug234 w struct ptrs on 64-bit)
#KnownFailure:	bug1027 (translator regression on bug279)
TimeLimit:      $DEFAULT$
ExitCode:       0

TestName:	bug296
BuildCmd:       nolink,upcc

TestName:       bug299a
PassExpr: ^1
TimeLimit:      $DEFAULT$

TestName:       bug299b
PassExpr: ^1
TimeLimit:      $DEFAULT$

TestName:       bug301

TestName:       bug305
PassExpr: ^done.
FailExpr: ERROR
TimeLimit:      $DEFAULT$

TestName:       bug306
FailExpr: ERROR
TimeLimit:      $DEFAULT$

TestName:       bug311
PassExpr: ^done.
FailExpr: ^Runtime
TimeLimit:      $DEFAULT$

TestName:       bug312

TestName:       bug317a
KnownFailure:   bug349 (bad codegen for spointer -> int cast)

TestName:       bug319
PassExpr: ^SUCCESS
FailExpr: FAILED
TimeLimit:      $DEFAULT$

TestName: 	bug339
#KnownFailure:   bug339 (Translator deletes empty main)

TestName:       bug342
BuildCmd:       nolink,upcc

# bug349: see bug317a.upc

TestName: 	bug354
#KnownFailure:	Bug 648 (Assertion failure in whirl2c: Expected non-null types in WN2C_based_lvalue())

TestName: 	bug367

TestName:       bug370

TestName:	bug382
StaticThreads: 0 
DynamicThreads:	1	# dyn threads only
CompileResult:  fail

TestName:       bug383
PassExpr: ^done.
FailExpr: ERROR
TimeLimit:      $DEFAULT$

TestName:	bug389
BuildCmd:	nolink,upcc

TestName:	bug404
BuildCmd:	nolink,upcc
StaticThreads:	0 # bug unrelated to threads
#KnownFailure:	compile-failure ;; bug404 (extern decl causing conflicting types error)

TestName:       bug411
PassExpr:       ^Success
FailExpr:       ^Failure
TimeLimit:      $DEFAULT$
#KnownFailure: bug411 (bad struct copy codegen)

TestName:       bug434
PassExpr:       0
FailExpr:       ERROR
TimeLimit:      $DEFAULT$
#KnownFailure: bug434 (runtime incorrectly handles casts of null shared to local)

TestName:       bug438
PassExpr:       ^SUCCESS
FailExpr:       FAILURE
TimeLimit:      $DEFAULT$
#KnownFailure:   bug383 (problems with argument to function with no formal argument prototype)

TestName:       bug441
PassExpr:       ^done.
FailExpr:       ERROR
TimeLimit:      $DEFAULT$
#KnownFailure: bug441 (for loop incorrectly translated into forall)

TestName:       bug446
PassExpr:       ^done.
FailExpr:       ERROR
TimeLimit:      $DEFAULT$
#KnownFailure: compile-failure ;; bug446 (Translator needs a naming convention for temporaries)

TestName:	bug449
PassExpr:       ^done.
TimeLimit:      $DEFAULT$

TestName:	bug467
#KnownFailure:   bug339 (Translator deletes empty main)

TestName:	bug476
#KnownFailure:   bug339 (Translator deletes empty main)

TestName:       bug500
PassExpr:       ^SUCCESS
FailExpr:       FAILED
TimeLimit:      $DEFAULT$
#KnownFailure: bug500 (problem with cast of shared pointer to local)
KnownFailure:   compile-warning ; (os_darwin || os_aix) && cc_gnu && debug ; bug925 (printf argument conversion bug for upc_addfield on OSX/gcc)

TestName:       bug508
PassExpr:       ^SUCCESS
FailExpr:       FAILED
TimeLimit:      $DEFAULT$

TestName:       bug509
PassExpr:       ^SUCCESS
FailExpr:       FAILED
TimeLimit:      $DEFAULT$
#KnownFailure: bug827 (codegen regression on 64-bit regarding pointer-int casts)
#KnownFailure: bug509 (bad addr calculation for field of shared array of structrues containing shared arrays)
#KnownFailure: bug602 (incorrect code for shared pointer casts)
#KnownFailure: bug871 (bug509 crashing translator)
KnownFailure:   compile-warning ; (os_darwin || os_aix) && cc_gnu && debug ; bug925 (printf argument conversion bug for upc_addfield on OSX/gcc)
KnownFailure:   run-all ; trans_opt ; bug1505 (--opt-specific runtime failures on stable translator)

TestName:       bug513
PassExpr:       ^done.
FailExpr:       ERROR
TimeLimit:      $DEFAULT$
#KnownFailure: bug513 (Translator rejects C99 mid-block declarations)

TestName:       mythread_type
StaticThreads: 1
DynamicThreads:	0	# static threads only
PassExpr:       ^SUCCESS
FailExpr:       FAILED
TimeLimit:      $DEFAULT$

TestName:       bug515
PassExpr:       ^done.
FailExpr:       ERROR
TimeLimit:      $DEFAULT$
#KnownFailure: bug515 (setting shared ptrs to null)
#KnownFailure: bug570 (upcr_put_shared should have a const src)
#KnownFailure: run-all ; conduit_gm ; bug1036 (runtime regression on pcp-i_gm-pthreads: bug515, bug874, test19)
#KnownFailure: all ; ; bug1141 (Translator regression on PTS null check)

TestName:       bug518
PassExpr:       ^SUCCESS
FailExpr:       FAILURE
TimeLimit:      $DEFAULT$
#KnownFailure: bug518 (Translator generating invalid offsets when accessing array elements)
KnownFailure:   compile-warning ; (os_darwin || os_aix) && cc_gnu && debug ; bug925 (printf argument conversion bug for upc_addfield on OSX/gcc)

TestName:	bug521
Files:		$TESTNAME$.c	# A .c test case
BuildCmd:	nolink,upcc

TestName:	bug521b
Files:		$TESTNAME$.c	# A .c test case
BuildCmd:	nolink,upcc
#KnownFailure: bug521 (Double-include scheme corner case)

TestName:	bug530
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$

TestName:	bug535
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug535 (Multiple shared declarations on same line broken)

TestName:       bug544
PassExpr:       OK
FailExpr:       ERROR
TimeLimit:      $DEFAULT$
KnownFailure: all ;; bug544 (translator rejecting legal hard TLD initializers)

TestName:	bug547
PassExpr:	^SUCCESS
FailExpr:	FAILED
TimeLimit:	$DEFAULT$
#KnownFailure: bug547 (translator breaks float constants)
KnownFailure: compile-warning ; cc_xlc && !os_aix ; bug1504 (xlc's math.h constants are broken)
KnownFailure: compile-warning ; cc_intel ; bug992 (Intel C has no infinity constants)
KnownFailure: compile-all ; os_osf ; bug1342 (tru64 translator crash on bug547)

TestName:	bug548
PassExpr:	^SUCCESS
FailExpr:	FAILED
TimeLimit:	$DEFAULT$

TestName:	bug549
PassExpr:	^Success
FailExpr:	^Failure
TimeLimit:	$DEFAULT$

TestName:       bug550
PassExpr:       ^done.
FailExpr:       ERROR
TimeLimit:      $DEFAULT$

TestName:	bug557
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug557 (upc_forall should allow C99-style for loop header declarations)

TestName:	bug563
PassExpr:	^SUCCESS
FailExpr:	ERROR
TimeLimit:	$DEFAULT$

TestName:	bug566
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug566 (C99 declarations in for loop header have incorrect scoping)

TestName:	bug567
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug567 (struct initializers broken)
#KnownFailure:   run-match ; ; bug949 (Regression on bug853, bug567)
KnownFailure:   run-match ; cpu_64 && structsptr ; bug1400 (bad struct init codegen with 64-bit struct ptrs)

TestName:	bug568
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug568 (Bad codegen for arrays of structs)

TestName:	bug574
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug574 (Nested C99 for loop declarations crash translator)

TestName:	bug575
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug575 (Bad codegen for initializing private arrays of pointer-to-shared)

TestName:	bug576
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$

TestName:	bug577
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug577 (Translator incorrectly calculates indexes into multi-dim arrays)

TestName:	bug579
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug579 (Translator breaks nested typedefed local structs)
#KnownFailure:   bug339 (Translator deletes user_main from bug579 w/ Compaq C)

TestName:       bug581
PassExpr:       ^SUCCESS
FailExpr:       FAILED
TimeLimit:      $DEFAULT$

TestName:       bug582
PassExpr:       ^SUCCESS
FailExpr:       FAILURE
TimeLimit:	$DEFAULT$
#KnownFailure: bug582 (incorrect size arg in UPCR_GET_NB_PSHARED)
#KnownFailure: bug518 (Translator generating invalid offsets when accessing array elements)
KnownFailure:   compile-warning ; (os_darwin || os_aix) && cc_gnu && debug ; bug925 (printf argument conversion bug for upc_addfield on OSX/gcc)

TestName:       bug591
BuildCmd:       nolink,upcc
DynamicThreads:	0	# static threads only
#KnownFailure: bug591 (translator crash on Rice's NAS BT)

TestName:       bug591b
#KnownFailure: bug591 (translator crash on Rice's NAS BT)

TestName:	bug594
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug594 (Bad codegen for arrays of structs using constant indexing)

TestName:	bug595
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
KnownFailure: compile-failure ; trans_opt ; bug1317 (--opt regression HEAD trans: bug595)
KnownFailure: run-match ;; bug595 (Translator botches struct sizes on all platforms)
#KnownFailure:   compile-failure ; cpu_32 ; bug972 (bad struct codegen on seaborg/32)
#KnownFailure: bug650 (awk breaks upcc on flyer)

TestName:	bug602
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: bug827 (codegen regression on 64-bit regarding pointer-int casts)

TestName:	bug604
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$

TestName:	bug606
BuildCmd:       nolink,upcc

TestName:	bug608
BuildCmd:       nolink,upcc

TestName:	bug612
BuildCmd:       nolink,upcc
# VLA is now supported by translator (provided system has working alloca)
# -- NO, it's turned off again for now
CompileResult:	fail	# Want VLA to fail at compile time, before linking
#KnownFailure: bug612 (C99 VLA support broken in confusing way)
RequireFeature: berkeleyupc # no VLA

TestName:	bug614
PassExpr:	^SUCCESS
TimeLimit:	$DEFAULT$

TestName:	bug639
PassExpr:	^done.
TimeLimit:	$DEFAULT$
#KnownFailure: bug639 (translator emitting mid-block declarations for shared data init)

TestName:	bug640
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
StaticThreads:	4	# Error only appears for 4 static threads!!!
DynamicThreads: 0
#KnownFailure: bug640 (mg runtime crash due to translator bug)

TestName:	bug642
PassExpr:	^done.
TimeLimit:	$DEFAULT$

TestName:	bug644
PassExpr:	^SUCCESS
TimeLimit:	$DEFAULT$
#KnownFailure: bug644 (Error in compilation of code involving global allocation of a shared pointer to shared integers in a structure)

TestName:	bug645
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: compile-all ;; bug645 (aggregate type casts)

TestName:	bug649
PassExpr:	^done.
TimeLimit:	$DEFAULT$
#KnownFailure: bug649 (Bogus address arithmetic for private 2-D arrays)

TestName:	bug669
BuildCmd:	nolink,upcc
#KnownFailure:	bug672 (Bad code gen for bug669.upc and bug243.upc)
#KnownFailure:	bug669 (Translator is deleting struct fields)

TestName:       bug670
PassExpr:       ^FOO GOOD
TimeLimit:      $DEFAULT$
KnownFailure:	compile-warning ;; bug670 (Translator dropping explicit cast to const)

TestName:       bug673
PassExpr:       ^SUCCESS
TimeLimit:      $DEFAULT$
#KnownFailure:	bug673 (Incrementing/decrementing struct fields)

TestName:	bug686
PassExpr:	^done.
FailExpr:	ERROR
StaticThreads:  0  # this test is only VLA under dynamic threads
TimeLimit:	$DEFAULT$
CompileResult:  fail # supposed to fail with a "VLA not supported" error
#KnownFailure:	bug686 (bad codegen for VLA accesses)
RequireFeature: berkeleyupc # no VLA

# this test is VLA under static or dynamic threads
TestName:	bug686b
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
CompileResult:  fail # supposed to fail with a "VLA not supported" error
RequireFeature: berkeleyupc # no VLA

TestName:	bug707
PassExpr:	^done.
TimeLimit:	$DEFAULT$

TestName:	bug722
PassExpr:	^12.0
TimeLimit:	$DEFAULT$
#KnownFailure: run-match ; cc_xlc && nodebug ; bug999 (xlc ansialiasing causes incorrect optimization of packed pointers)

TestName:	bug730
PassExpr:	^done.
TimeLimit:	$DEFAULT$
#KnownFailure: all ; ; bug1141 (Translator regression on PTS null check)

TestName:	bug738
PassExpr:	^SUCCESS
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure:	bug738 (Translator makes bad call to UPCR_ISNULL_SHARED)

TestName:	bug743
PassExpr:	^SUCCESS
FailExpr:	FAILURE
TimeLimit:	$DEFAULT$
#KnownFailure:	bug743 (incorrect cast of long to int on AIX 64-bit)

TestName:	bug784
BuildCmd:       nolink,upcc
#KnownFailure:	bug784 (Translator fails to propagate shared qualifier across typedef of incomplete struct type)
KnownFailure: compile-all ; cc_pgi ; bug1306 (Bad empty declaration for pointer to typedef of incomplete type)

TestName:	bug791
BuildCmd:       nolink,upcc
#KnownFailure:	bug791 (Translator fails to handle restrict keyword)

TestName:	bug791b
BuildCmd:       nolink,upcc

TestName:	bug796
BuildCmd:       nolink,upcc
DynamicThreads: 0
#KnownFailure:	bug796 (Translator crash regarding FP return value)

TestName:	bug804
RequireFeature: upc_dump_shared
PassExpr:	^done.
TimeLimit:	$DEFAULT$
#KnownFailure:	bug804 (Translator corrupting pointer-to-shared in struct)

TestName:	bug813
PassExpr:	^done.
TimeLimit:	$DEFAULT$
#KnownFailure:	bug813 (internal errors and bad codegen for returning NULL pointer-to-shared)

TestName:	bug814
PassExpr:	^done.
TimeLimit:	$DEFAULT$
#KnownFailure:	bug814 (codegen performs arithmetic on void *)

TestName:	bug818
BuildCmd:       nolink,upcc
#KnownFailure:	bug818 (bogus translator warnings on upc_io_test)

TestName:	bug834
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure:	bug834 (Bad codegen for memory accesses with casts)

TestName:	bug846
PassExpr:	^done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
KnownFailure:	run-match ; cpu_64 ; bug846 (Translator overflows when calculating sizeof() for large arrays)

TestName:	bug851
CompileResult:  fail 
#KnownFailure: bug851 (Translator fails to reject void return in function with non-void return type)

TestName:	bug853
PassExpr:	^SUCCESS
FailExpr:	FAIL
TimeLimit:	$DEFAULT$
#KnownFailure:	bug853 (generation of invalid struct initializer on 64-bit)
#KnownFailure:   compile-failure,compile-warning ; cpu_64 ; bug949 (Regression on bug853, 64-bit)

TestName:	bug854
#KnownFailure:	bug854 (Bad codegen for prototypes with shared pointer formals)

TestName:	bug856
PassExpr:	^done.
DynamicThreads: 0
TimeLimit:	$DEFAULT$
KnownFailure:	bug856 (Bad upc_blocksize computations with typedefs)

TestName:	bug856b
PassExpr:	^done.
DynamicThreads: 0
TimeLimit:	$DEFAULT$
KnownFailure:	bug856 (Bad upc_blocksize computations with typedefs)

TestName:       bug857
BuildCmd:       nolink,upcc
DynamicThreads: 0
#KnownFailure:   compile-failure ;; bug857 (Extra shared to local cast in declaration section of function)
#KnownFailure:   compile-warning ; ; bug1046 (Translator regression on bug857, bug972 on 32-bit)

TestName:	bug858
PassExpr:	^done.
TimeLimit:	$DEFAULT$
KnownFailure:	compile-failure ;; bug858 (Translator fails to parse C99 struct designators )

TestName:	bug866-1
Files:          bug866.upc
Flags:		-DTEST=1
CompileResult:	fail	

TestName:	bug866-2
Files:          bug866.upc
Flags:		-DTEST=2
CompileResult:	fail	

TestName:	bug866-3
Files:          bug866.upc
Flags:		-DTEST=3
CompileResult:	fail	
#KnownFailure: bug866 (Translator should reject upc_blocksizeof on non-shared types)

TestName:	bug866-4
Files:          bug866.upc
Flags:		-DTEST=4
CompileResult:	fail	
#KnownFailure: bug866 (Translator should reject upc_blocksizeof on non-shared types)

TestName:	bug866-5
Files:          bug866.upc
Flags:		-DTEST=5
PassExpr:	^done.
TimeLimit:	$DEFAULT$

TestName:	bug873a
CompileResult:	fail	

TestName:	bug873b
CompileResult:	fail	

TestName:	bug874
PassExpr:	passed
FailExpr:       rror
TimeLimit:	$DEFAULT$
#KnownFailure:   bug515 (Bad codegen for setting shared ptrs to null)
#KnownFailure:	bug874 (umalloc malfunctions under heavy load)
#KnownFailure: run-all ; conduit_gm ; bug1036 (runtime regression on pcp-i_gm-pthreads: bug515, bug874, test19)

TestName:	bug880
PassExpr:	pass
TimeLimit:	$DEFAULT$
#KnownFailure:   bug880 (Bad codegen for accessing char arrays in structs)

TestName:	bug883
PassExpr:	done.
TimeLimit:	$DEFAULT$
#KnownFailure:   bug883 (incorrect translation of multi-dim array parm)

TestName:	bug892
#KnownFailure:   bug892 (incorrect translation of multi-dim array with constant indices)

TestName:	bug896
KnownFailure:   bug896 (problem with array of unspecified size)

TestName:	bug899
Files:	        bug899.c

TestName:	bug899b
Files:	        bug899b.c
KnownFailure:   compile-failure ;; bug899 (translator cannot handle UPC keywords as identifiers in C mode)

TestName:	bug905

TestName:	bug907
#KnownFailure:   compile-failure ;; bug907 (Array declaration followed by array definition is rejected)

TestName:	bug909
#KnownFailure:   compile-failure ;; bug909 (struct keyword incorrectly used when typedef is involved)

TestName:	bug910
#KnownFailure:   compile-failure ;; bug910 (Translator crash during UPC Lowering phase)

TestName:	bug912
#KnownFailure:   compile-failure ;; bug912 (whirl2c confused by array of structs containing an array)

TestName:	bug914
PassExpr:	done.
TimeLimit:	$DEFAULT$
#KnownFailure:   bug914 (Array initializer problem in MT19937)

TestName:	bug916
Files:	        bug916.c

TestName:	bug922
Files:	        bug922.c

TestName:	bug925
KnownFailure:   compile-warning ; (os_darwin || os_aix) && cc_gnu && debug ; bug925 (printf argument conversion bug for upc_addfield on OSX/gcc)

TestName:	bug927
DynamicThreads: 0
#KnownFailure:   compile-failure ;; bug927 (Whirl2c crashes accessing 2-d array of structs)

TestName:	bug927b
DynamicThreads: 0
#KnownFailure:   compile-failure ;; bug927 (Whirl2c crashes accessing 2-d array of structs)

TestName:	bug932
#KnownFailure:   compile-failure ;; bug932 (Constant indexing into array of structs crashes translator)

TestName:	bug941
#KnownFailure:   compile-failure ;; bug941 (Global pointer to array of unspecified size leads to parse error)

TestName:	bug943
#KnownFailure:   compile-failure ;; bug943 (Compiler error on nested struct assignment)

TestName:	bug944
#KnownFailure:   compile-failure ;; bug944 (Translator crash on union: can't find the corresponding field id)

TestName:	bug945
#KnownFailure:   compile-failure ;; bug945 (Bad codegen for arrays in nested structs)

TestName:	bug946
PassExpr:	done.
FailExpr:       rror
TimeLimit:	$DEFAULT$
#KnownFailure:   compile-failure ;; bug946 (Translator crash for arrays in nested structs)
KnownFailure:	run-match ; cc_pathscale && nodebug ; bug2062 (Pathcc misoptimizes bug946.upc)

TestName:	bug953
#KnownFailure:   compile-failure ;; bug953 (Incorrect code for union field assignment)

TestName:	bug956
BuildCmd:       nolink,upcc

TestName:	bug959
#KnownFailure:   compile-failure ;; bug959 (Bad codegen for pointer-to-shared in conditional expression)

TestName:	bug959b
#KnownFailure:   compile-warning ;; bug959 (Bad codegen for pointer-to-shared in conditional expression)

TestName:	bug966
#KnownFailure:   compile-failure ;; bug966 (Typecheck bug for array field in shared struct)

TestName:	bug966b
#KnownFailure:   compile-failure ;; bug966 (Typecheck bug for array field in shared struct)

TestName:	bug966c
#KnownFailure:   compile-failure ;; bug966 (Typecheck bug for array field in shared struct)

TestName:	bug967
#KnownFailure:   compile-warning ;; bug967 (Bad codegen for volatile qualifiers)

TestName:	bug972
KnownFailure:   compile-failure ; cpu_32 ; bug972 (bad struct codegen on seaborg/32)
#KnownFailure:   compile-all ; ; bug1046 (Translator regression on bug857, bug972 on 32-bit)

TestName:	bug975

TestName:	bug979
#KnownFailure: compile-all ;; bug979 (Incorrect code generation for s->p++)

TestName:	bug984
#KnownFailure:   compile-all ;; bug984 (bad codegen for assigning shared ptr-to-local to private ptr-to-local)

TestName:	bug1008
BuildCmd:       nolink,upcc
#KnownFailure:   compile-all ;; bug1008 (assigning to an element of shared a array of structs)

TestName:	bug1009
BuildCmd:       nolink,upcc

TestName:	bug1010
PassExpr:	done.
TimeLimit:	$DEFAULT$
#KnownFailure:   bug1010 (infinite while loops for I/O style code)

TestName:	bug1020
CompileResult:  fail
KnownFailure:   bug1020 (typechecker accepts erroneous comparison of ptr to local and ptr to shared)

TestName:	bug1022
KnownFailure: compile-warning ; cc_pathscale ; bug1199 (pointer from integer warnings)

TestName:	bug1023
#KnownFailure: compile-all ;; bug1023 (Bad codegen for typedef'd shared struct type)

TestName:	bug1036
PassExpr:	done.
TimeLimit:	$DEFAULT$
RequireFeature: upc_dump_shared
#KnownFailure: run-all ; conduit_gm ; bug1036 (runtime regression on pcp-i_gm-pthreads: bug515, bug874, test19)

TestName:	bug1040
#KnownFailure: compile-all ;; bug1040 (Type error on array in a shared struct)

TestName:	bug1080
#KnownFailure: compile-all ;; bug1080 (Major regression - Lowering offset bug in sgiupc)

TestName:	bug1087
FailExpr:	ERROR
PassExpr:	done.
TimeLimit:	$DEFAULT$
#KnownFailure:   compile-all ;; bug1087 (block-scope static variables seriously broken)

TestName:	bug1094
FailExpr:	ERROR
PassExpr:	done.
TimeLimit:	$DEFAULT$
#KnownFailure:   bug1094 (Bad codegen for sptr subtraction)

TestName:	bug1113
KnownFailure: compile-all ;; bug1113 (Translator crash on simple C code)

TestName:	bug1118
PassExpr:	done.
TimeLimit:	$DEFAULT$

TestName:	bug1126
FailExpr:	ERROR
PassExpr:	done.
TimeLimit:	$DEFAULT$
DynamicThreads: 0
StaticThreads:  $DEFAULT$            # compile for static threads
#KnownFailure: compile-warning ; trans_g ; bug1160 (-tv causes lots of bad codegen)
#KnownFailure: run-all ; trans_g ; bug1126 (bad codegen for -g: shared pointer assignment from shared array element)

TestName:	bug1141
FailExpr:	ERROR
PassExpr:	done.
TimeLimit:	$DEFAULT$
#KnownFailure:   bug1141 (Translator regression on PTS null check)

TestName:	bug1146

TestName:	bug1221
FailExpr:	ERROR
PassExpr:	done.
TimeLimit:	$DEFAULT$
KnownFailure:   run-all ; symmetricsptr ; bug1221 (NULL symmetic pointers completely broken)

TestName:	bug1222
#KnownFailure:   compile-all ;; bug1222 (bad codegen on upc_threadof(NULL))

TestName:	bug1222b
#KnownFailure:   compile-all ;; bug1222 (bad codegen on upc_threadof(NULL))

TestName:	bug1223
KnownFailure: compile-warning ;; bug 1223 (Translator warning causing most cygwin tests to fail)

TestName:	bug1228
KnownFailure: run-all ;; bug 1228 (Ambiguity in barrier matching semantics)

TestName:       bug1229
BuildCmd:       nolink,upcc
KnownFailure: compile-all ; cc_compaq ; bug 1229 (Translator botching reincludes for Compaq C)

TestName:	bug1230
FailExpr:	ERROR
PassExpr:	done.
TimeLimit:	$DEFAULT$
KnownFailure: run-all ; os_osf ; bug 1230 (Tru64 translator breaks toupper)

# Test for bugs that break w/ various (p)thread layouts.
# We try several counts, not knowing the config we'll run on (or the bug we'll trigger).
# StaticThreads ensures runtime notices if wrong number spawned (eg bug1263)
TestName:	thread_count
DynamicThreads: 1,2,3,4,5,6,7,8
StaticThreads:  1,2,3,4,5,6,7,8
PassExpr:	done.
TimeLimit:      $DEFAULT$
#KnownFailure: run-all ;; bug1262 (upc_all_alloc broken for some pthread layouts)
#KnownFailure: run-all ;; bug1263 (UPC_PTHREAD_MAP incorrect)

TestName:	bug1262b
PassExpr:	done.
TimeLimit:	$DEFAULT$

TestName:	bug1262c
PassExpr:	done.
TimeLimit:	$DEFAULT$

TestName:	bug1270
PassExpr:	done.
TimeLimit:	$DEFAULT$
#KnownFailure: run-all ;; bug1270 (limited number of globals supported)
KnownFailure: compile-all ; cc_pathscale ; bug1340 (pathcc optimizer crash on bug1270)

TestName:	bug1275
KnownFailure: compile-warning ;; bug 1275 (bad codegen for &a[0][0])

TestName:	bug1287
RequireFeature: upc_io
PassExpr:	done.
FailExpr:	ERROR
DynamicThreads: 0
TimeLimit:	$DEFAULT$
KnownFailure: compile-all ; cc_pgi ; bug1306 (Bad empty declaration for pointer to typedef of incomplete type)

TestName:	bug1297
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$

TestName:	bug1303
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: run-match ; ; bug1303 (stdout/stderr broken on Solaris, bad struct size for bitfields)


TestName:	bug1315b
PassExpr:	done.
FailExpr:	ERROR
KnownFailure: all ;; bug 1315 (invalid dereference on struct array indirection)

TestName:	bug1323
KnownFailure: compile-all ;; bug 1323 (bad codegen for incomplete struct types)

TestName:	bug1338
BuildCmd:       nolink,upcc
KnownFailure: compile-all ;; bug 1338 (extern causes type mismatch on ptr-to-shared type)

TestName:	bug1352
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
#KnownFailure: run-all ;; bug 1352 (Bad codegen on conditional with shared array access)

TestName:	bug1354
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
KnownFailure: compile-all ;; bug 1354 (backend crash for postfix ops on fields of 2D arrays of structs)

TestName:	bug1382
BuildCmd:	nolink,upcc
KnownFailure:	compile-all ;; bug 1382 (limited size of static char arrays)

TestName:	bug1386
BuildCmd:	nolink,upcc
KnownFailure:	compile-all ;; bug 1386 (Problem with static structs)

TestName:	bug1435
BuildCmd:	nolink,upcc
KnownFailure:	compile-all ;; bug 1435 (suspicious codegen: duplicate volatile qualifiers on array elements)

TestName:	bug1451
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
KnownFailure: compile-warning ; cc_sun ; bug 1451 (warning caused by codegen of negative initializer for global unsigned int)

TestName:	bug1472
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$

TestName:	bug1522
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
KnownFailure: run-all ; trans_g && pthreads ; bug1522 (totalview support breaks pthread TLD)

TestName:	bug1531
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$

TestName:	bug1557
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$

TestName:	bug1559
BuildCmd:	nolink,upcc
KnownFailure:	compile-all ;; bug 1559 (Attempt to cast predef_I4 to pointer-to-shared)

TestName:	bug1565
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
KnownFailure:	run-match ;; bug 1565 (incorrect iteration of integer in a structure containing PTS)

TestName:	bug1578
BuildCmd:	nolink,upcc
KnownFailure:	compile-all ;; bug 1578 (translator crash)

TestName:	bug1583
BuildCmd:	nolink,upcc
KnownFailure:	compile-all ;; bug 1583 (translator crash on forward reference to enum)

TestName:	bug1639
BuildCmd:	nolink,upcc
CompileResult:  fail
KnownFailure:	compile-all ;; bug 1639 (translator fails to diagnose incompatible prototypes)

TestName:	bug1647
BuildCmd:	nolink,upcc
KnownFailure:	compile-all ;; bug 1647 (bogus translator errors and crash on simple test program)

TestName:	bug1657
BuildCmd:	nolink,upcc

TestName:	bug1663
BuildCmd:	nolink,upcc
StaticThreads:  0
CompileResult:  fail
KnownFailure:	compile-all ;; bug 1663 (Adding static to array declaration masks compilation)

TestName:	bug1664
BuildCmd:	nolink,upcc
KnownFailure:	compile-warning ;; bug 1664 (front end complains about differing blocksizes on assignment to shared structure component)

TestName:	bug1665
BuildCmd:	nolink,upcc
CompileResult:  fail
KnownFailure:	compile-all ;; bug 1665 (address of pointer-to-shared field does not have indefinite blocksize)

TestName:	bug1667
KnownFailure:	all ;; bug 1667 (a.x[i][j] expressions for double array incorrectly codegens as char type)

TestName:	bug1668
BuildCmd:	nolink,upcc
CompileResult:  fail
KnownFailure:	compile-all ;; bug 1668 (poor error message for arithmetic on shared void *)

TestName:	bug1709
PassExpr:	^SUCCESS
TimeLimit:	$DEFAULT$
RequireFeature: upc_atomics

TestName:	bug1732
PassExpr:	^castbug\spassed
TimeLimit:	$DEFAULT$
KnownFailure:	run-all ;; bug 1732 (bad codegen for shared arithmetic expressions that change blocksize with casts)

TestName:	bug1926
BuildCmd:	nolink,upcc
KnownFailure:	compile-all ;; bug 1926 (typedef generates conflicting definition)

TestName:	bug1930
PassExpr:	done.
FailExpr:	ERROR
TimeLimit:	$DEFAULT$
KnownFailure:	run-all ;; bug 1930 (-opt bug with arrays of PTS)

TestName:	bug1983
BuildCmd:	nolink,upcc
CompileResult:  fail
KnownFailure:	compile-all ;; bug 1983 (erroneous shared stack variable accepted)

TestName:	bug1997
BuildCmd:	nolink,upcc
CompileResult:  fail
KnownFailure:	compile-all ;; bug 1997 (translator silently accepts type-mismatched blocksizes on argument passing)

TestName:	bug2044
Files:          bug2044.upc
CompileResult:	fail	
KnownFailure:   compile-all ;; bug 2044 (Translator should reject upc_blocksizeof on non-shared types)

TestName:	bug2112
KnownFailure:   compile-all ;; bug 2112 (translator crash on T3E's ctype.h)


